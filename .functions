function cheat() {
      curl cht.sh/$1
}

fgco() {
  branches=$(git branch) &&
  branch=$(echo "$branches" | fzf +s +m -e) &&
  git checkout $(echo "$branch" | sed "s:.* remotes/origin/::" | sed "s:.* ::")
}

fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi
}

loadnvm(){
  if [[ $(brew ls --versions nvm) ]]
  then
       export NVM_DIR="$HOME/.nvm"
       . "$(brew --prefix nvm)/nvm.sh"
  fi
}


function reload_pg() {
  echo "brew services stop postgresql"
  echo "pg_ctl -D /usr/local/var/postgres stop"
  echo "brew services start postgresql"
  echo "brew services list"
  echo ""
  echo "OR:"
  echo "brew services stop postgresql"
  echo "pg_ctl -D /usr/local/var/postgres status"
  echo "pg_ctl -D /usr/local/var/postgres kill KILL 385"
  echo "brew services start postgresql"
  echo "brew services list"
}

function fp() {
  grep -rn --include \*.html.erb "$1" . | grep render
}

# Uses git-open to open commit specified as argument
function goc {
  local commit_base_url=$(git open -c -p | sed 's:commit/.*:commit:g')
  open "$commit_base_url/$1"
}

function rgr() {
  rake routes | grep "$1" | grep "$2" | grep "$3"
}

function rgt(){
  rails g test_unit:"$1" "$2" --no-fixture
}

function is() {
  open "https://gitlab.mparagon.pl/Projekt/trackers/issues/issues/$1"
}

function sid() {
  cat log/development.log | grep "$1" | grep SELECT
}

function sidc() {
   cat log/development.log | grep "$1" | grep SELECT | wc -l
}
